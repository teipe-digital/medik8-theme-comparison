(()=>{"use strict";var t={d:(e,n)=>{for(var l in n)t.o(n,l)&&!t.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:n[l]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{GlobalVariantSlider:()=>GlobalVariantSlider});class GlobalVariantSlider extends HTMLElement{constructor(){super(),this._menuOption=0,this.menuButtons=this.querySelectorAll(".js-gvs-menu-option"),this.currentCarousel=null}connectedCallback(){let t=this.querySelector(":scope > template");if(t){try{this.settings=JSON.parse(t.innerHTML)}catch(t){console.log(t)}t.remove(),t=null}this.init()}init(){this.menuButtons.forEach((t=>{t.addEventListener("click",(t=>{this.menuOption=Number(t.target.dataset.idx)}))})),this.buildVariantSlider()}get menuOption(){return this._menuOption}set menuOption(t){this._menuOption=t,this.menuButtons.forEach((t=>{const e=Number(t.dataset.idx);t.classList.toggle("group-active",e===this._menuOption)})),this.buildVariantSlider(),setTimeout((()=>{_swat.initializeActionButtons("global-variant-slider"),window.yotpoWidgetsContainer&&window.yotpoWidgetsContainer.initWidgets()}),0)}buildVariantSlider(){this.currentCarousel&&(this.currentCarousel.destroy(),this.currentCarousel=null);const t=`\n      <global-carousel class="block-oh block-rel">\n        <template>\n          {\n            "options":{ \n              "loop": false,\n              "skipSnaps": true\n            },\n            "plugins":{\n              "scrollbar":{},\n              "nav": {\n                "nextBtn": ".gvs__nav--next",\n                "prevBtn": ".gvs__nav--prev"\n              }\n            }\n          }\n        </template>\n\n        <div class="block-grid global-carousel__items global-carousel__items--overflow-visibile">\n          <div class="global-carousel__container">\n            ${this.settings.VariantMetaObjects[this._menuOption].variantList.map((t=>`\n        <global-product-card \n          class="cell-r--d2">\n          <template>\n            {\n              "product":${JSON.stringify(t)},\n              "translations": ${JSON.stringify(this.settings.translations)}\n            }\n          </template>\n        </global-product-card>\n      `)).join("")}\n          </div>\n          <div class="global-carousel__scrollbar gvs-slider__scrollbar--small"></div>\n          <button aria-label="Previous slide" class="js-gvs__prev gvs__nav gvs__nav--prev">\n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">\n              <path d="M9.99999 6.69225L15.3077 12L9.99999 17.3078L9.29224 16.6L13.8922 12L9.29224 7.4L9.99999 6.69225Z" fill="black"/>\n            </svg>\n          </button>\n          <button aria-label="Next slide" class="js-gvs__next gvs__nav gvs__nav--next">\n            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">\n              <path d="M9.99999 6.69225L15.3077 12L9.99999 17.3078L9.29224 16.6L13.8922 12L9.29224 7.4L9.99999 6.69225Z" fill="black"/>\n            </svg>\n          </button>\n        </div>\n      </global-carousel>\n    `;this.querySelector(".gvs-slider").innerHTML=t,this.currentCarousel=this.querySelector(".gvs-slider global-carousel")}}customElements.get("global-variant-slider")||customElements.define("global-variant-slider",GlobalVariantSlider);var n=self;for(var l in e)n[l]=e[l];e.__esModule&&Object.defineProperty(n,"__esModule",{value:!0})})();