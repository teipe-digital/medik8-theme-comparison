(()=>{"use strict";var e={d:(t,o)=>{for(var l in o)e.o(o,l)&&!e.o(t,l)&&Object.defineProperty(t,l,{enumerable:!0,get:o[l]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{GlobalTakeoverToggle:()=>GlobalTakeoverToggle});class GlobalTakeoverToggle extends HTMLElement{constructor(){super()}connectedCallback(){this.toggle=this.querySelector("input"),this.fetchDelay=parseInt(this.dataset.fetchDelay,10),this.addToggleListener()}addToggleListener(){this.toggle.addEventListener("change",(e=>{e.preventDefault(),this.toggle.disabled=!0,document.querySelectorAll("#takeover-content, #PageContainer .default-content").forEach((e=>e.classList.remove("move-content"))),this.dispatchTakeoverFetch(!this.toggle.checked),setTimeout((()=>{this.toggleTakeoverContent(this.toggle.checked)}),this.fetchDelay)}))}toggleTakeoverContent(e){document.body.classList.toggle("dark-mode",e),document.querySelector("#PageContainer .default-content").style.display=e?"none":"block",document.querySelector("#takeover-content").style.display=e?"block":"none",document.dispatchEvent(new CustomEvent("takeoverComplete")),this.toggle.disabled=!1}dispatchTakeoverFetch(e){document.dispatchEvent(new CustomEvent("takeoverFetching",{detail:{isReversing:e}}))}}customElements.define("global-takeover-toggle",GlobalTakeoverToggle);var o=self;for(var l in t)o[l]=t[l];t.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();