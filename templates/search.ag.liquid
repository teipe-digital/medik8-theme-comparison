<link rel="preload" as="script" href="{{ 'scripts.chunks.search-template.algolia-version.js' | asset_url }}">
<script type="text/javascript" src="{{ 'scripts.chunks.search-template.algolia-version.js' | asset_url }}" defer></script> 


<style type="text/css">

  {% comment %} chunk collection / search OR none critical{% endcomment %}
  global-product-thumbnail .yotpo.bottomLine.yotpo-small{
    margin-bottom:var(--gutter-unit-d2);
  }
  
  .gbl-filter-toggle-btn{
    background: #fff;
    border: 1px solid #e2e2e2;
    color: #5d5d5d;
    font-size: var(--t-r);
    height: 46px;
    padding:0 var(--gutter-unit-d2);
    text-transform: none;
  }
  
  .gbl-styled-select{
    display:flex;
    flex-flow: row wrap;
    align-items:center;
    gap:0 5px;
    padding:0 0 0 var(--gutter-unit-d2);
    position:relative;
    border: 1px solid #e2e2e2;
    min-height: 46px;
  }
  
  .gbl-styled-select__select{
    padding:0 37px 0 0;
    height:100%;
    border:none;
    outline:none;
    flex-grow:1;
    font-size:var(--t-r);
  }
  
  .gbl-styled-select__label{
    color:#666;
  }
  
  .gbl-styled-select__select:hover,
  .gbl-styled-select__select:focus
  {
    border:none;
    outline:none;
  }
  
  @media all and (max-width: 1023px) {
    .gbl-styled-select__select,
    .gbl-styled-select__label,
    .gbl-filter-toggle-btn{
      font-size:var(--t-xxs);
    }
  }
  

  .filter-sidebar__heading{
    border-bottom:1px solid #ddd;
  }

  .filter-sidebar__heading--mobile-filters{
    position:sticky;
    z-index:1;
    background:#fff;
    padding-top:var(--gutter-unit);
    top:0;
    display:flex;
    justify-content:center;
  }

  .filter-sidebar__mobile-reset{
    position:absolute;
    top:50%;
    right:var(--gutter-unit);
    transform:translateY(-50%);
  }

  .filter-sidebar__mobile-close{
    position:absolute;
    top:50%;
    left:var(--gutter-unit);
    transform:translateY(-50%);
  }

  .filter-sidebar__set{
    border:0;
    padding:0;
  }

  .filter-sidebar__set:not(:first-of-type){
    border-top:1px solid #d9d9d9;
    padding-top:var(--gutter-unit);
  }

  .filter-sidebar__ledgend{
    float:left;
  }
  
  .collection-v2__products-wrapper{
    width:75%;
  }

  .collection-v2__filters-wrapper{
    width:25%;
    padding:0 var(--gutter-unit);
  }

  @media all and (max-width: 1023px) {
    .collection-v2__products-wrapper{
      width:100%;
    }
    .collection-v2__filters-wrapper{
      display:none;
    }
  }
</style>

<div class="block-grid block-grid--f">
  <search-results-page>
    <search-results-heading 
      class="cell-l cell-r tac ct--x2 cb--x2" 
      content_no_results='Sorry, no results found'
      content_with_results='Showing [[count]] results for "[[term]]"'>
    </search-results-heading>
    <search-results-navigation></search-results-navigation>
    <div class="flex row-wrap align-top justify-left ct--x2 cb--x2 @tablet__ct" data-section-type="products">
      <div class="collection-v2__filters-wrapper">
        <global-filter-sidebar class="js-desktop-filter">
          <template>
            {% render 'search.ag.filter-ui' %}
          </template>
        </global-filter-sidebar>
      </div>
      <div class="collection-v2__products-wrapper">
        <search-results-products class="block-12/12 d-block"></search-results-products>
      </div>
    </div>
    <div class="flex row-wrap align-top justify-left ct--x2 cb--x2 @tablet__ct" style="display:none" aria-hidden="true" data-section-type="articles">
      <search-results-articles class="block-12/12 d-block"></search-results-articles>
    </div>
  </search-results-page>
</div>


<global-sidebar class="js-mobile-filter-global-sidebar" button_hide>
  <template>
    <global-filter-sidebar class="js-mobile-filter">
      <div class="scroll-flex">
        <div class="scroll-flex__scroll cb">
          {% render 'search.ag.filter-ui' , 
             isMobileSideBar: true
             titleWrapperClass:'filter-sidebar__heading--mobile-filters',
             resetButtonClass:'filter-sidebar__mobile-reset',
             setsWrapperClass:'cell-l cell-r'
          %}
        </div>
        <div class="scroll-flex__fixed cell-l cell-r cb ct">
          <div class="flex row-wrap align-center justify-space flex-grid">
            <button class="modal-close btn grow-1 cell-l cell-r ct--d2 cb--d2">View Products</button>
          </div>
        </div>
      </div>
    </global-filter-sidebar>
  </template>
</global-sidebar>

<script type="text/javascript">

  DomReadyPromise().then( async () => {

    const {algoliaThemeSettings} = window

    if( !algoliaThemeSettings || 
        !algoliaThemeSettings.algolia_api_key?.length || 
        !algoliaThemeSettings.algolia_app_id?.length 
      ){
      const params = new URLSearchParams(window.location.search)
      const query =  params.get('q')
      window.location.href = `/search?q=${query}`
      return 
    }
    
    let desktopFiltersBound = false
    let mobileFiltersBound = false

    // init the search hub with settings
    const hub = new SearchResultsPageHub({
      app_id:algoliaThemeSettings.algolia_app_id,
      search_api_key:algoliaThemeSettings.algolia_api_key,
      index_prefix: algoliaThemeSettings.algolia_index_prefix,
      title_tag:'Search: [[count]] results for "[[term]]',
      placeholder_image:{{ settings.search_placeholder_image | json }},
      sort_by:{
        label:{{ 'collections.sorting.title' | t | json }},
        values:[
          {
            label:"Relevance",
            value:"relevance"
          },
          {
            label:"Price, high to low",
            value:"price-descending"
          },
          {
            label:"Price, low to high",
            value:"price-ascending"
          }
        ]
      },

      translations:{
        navigation:{
          products:"Products",
          articles:"Content"
        },
        products:{
          empty:'Sorry, No results found.',
          filters:"Filters",
          products_single:"Product",
          product_plural:"Products",
          thumbnail:{
            quickview:{{ 'products.general.quickview' | t | json }},
            add_to_cart:{{ 'products.product.add_to_cart' | t | json }},
            compare_label:"{{ settings.compare_at_label_text }}",
            view_bundle: 'View Bundle' // temp until legacy bundles phased out
          }
        },
        articles:{
          empty:'Sorry, No results found.',
          thumbnail:{
            read_more:"Read More"
          }
        }
      }
    })

    // unwrap the template and bind desktop sidebar filter
    async function bindDesktopSidebarFilters(){
      if(desktopFiltersBound) return
      await hub.ObserverLite.once()
      desktopFiltersBound = true
      const desktopSidebarFilters = document.querySelector('.js-desktop-filter')
      desktopSidebarFilters.innerHTML = desktopSidebarFilters.querySelector('template').innerHTML  
      desktopSidebarFilters.bind()
      desktopSidebarFilters.subscribe( () => {
        const values = Object.values(desktopSidebarFilters.data).flat()
        hub.filters['p.tag'] = values
        hub.search()
      })

      hub.subscribe( () => {
        desktopSidebarFilters.updateStateFromFilters()
        desktopSidebarFilters.updateResetButtonState()
      })
    }

    // bind the sidebar filters
    async function bindMobileSidebarFilters(){
      if(mobileFiltersBound) return
  
      await hub.ObserverLite.once()
      mobileFiltersBound = true
      let mobileSidebarFiltersGlobalSidebar$ = false
      const mobileSidebarFiltersGlobalSidebar = document.querySelector('.js-mobile-filter-global-sidebar')

      // listen to when the sidebar filters are open / rendered, then add the subscription
      mobileSidebarFiltersGlobalSidebar.subscribe(({open}) => {
        if(!open || mobileSidebarFiltersGlobalSidebar$) return
        mobileSidebarFiltersGlobalSidebar$ = true
        const mobileSidebarFilters = mobileSidebarFiltersGlobalSidebar.wrapper.querySelector('.js-mobile-filter')
        mobileSidebarFilters.subscribe( () => {
          const values = Object.values(mobileSidebarFilters.data).flat()
          hub.filters['p.tag'] = values
          hub.search()
        })
        hub.subscribe( () => {
          mobileSidebarFilters.updateStateFromFilters()
          mobileSidebarFilters.updateResetButtonState()
        })
      })

      // subscribe to the filter toggle, which is located inside search-results-products
      const SearchResultsProducts = document.querySelector('search-results-products')
      SearchResultsProducts.filterToggle$.subscribe(() => {
        mobileSidebarFiltersGlobalSidebar.open()
      })
    }

    function onResize(mediaQuery){
      if(mediaQuery.matches) {
        bindMobileSidebarFilters()
      }else{
        bindDesktopSidebarFilters()
      }
    }

    window.matchMedia('(max-width: 1023px)').addListener(onResize)

    onResize(window.matchMedia('(max-width: 1023px)'))

  }).catch(err => {
    console.log(err)
  })
</script>