{%- if product.gift_card? -%}
  {%- assign is_gift_card = true -%}
  <script>window.isGiftCard = true</script>
{%- endif -%}

{% assign selected_variant_price = product.selected_or_first_available_variant.price | money %}

{% capture hintTextPointsHtml %}
  <span class="js-loyalty-hint__price" data-lion-price-for-product-id="{{ product.id }}" style="display:none">{{ selected_variant_price }}</span>
  <span data-lion-points-for-product-id="{{ product.id }}"></span>
{% endcapture %}

{% assign point_target = "{{ points }}" %}
{% capture hintTextHtml %}
  {{ 'products.product.loyalty_points_hint_html' | t | replace: point_target, hintTextPointsHtml }}
{% endcapture %}


{%- unless is_gift_card -%}
  <product-loyalty-points-hint-v2 style="display:none" hint_popup_text="{{ 'products.product.loyalty_lion__hint_text' | t | replace: '**cart.currency.symbol**', cart.currency.symbol }}" hint_button_text='{{ hintTextHtml }}'></product-loyalty-points-hint-v2>
{%- endunless -%}

<current-loyalty-points style="display:none">
  {% if customer %}
    <p>{{ 'products.product.loyalty_lion__have_before_text' | t }}<span data-lion-points="approved"></span>{{ 'products.product.loyalty_lion__have_after_text' | t }}&nbsp;&nbsp;<button class="btn-reset" type="button"><u>Convert Points</u></button></p>
  {% else %}
    <p id="p-join-loyalty" class="join-loyalty">{{ 'products.product.loyalty_lion__signup_html' | t }}<p>
  {% endif %}
</current-loyalty-points>


<style type="text/css">
  .medk8-product--price-box{
    position:relative;
  }

  product-loyalty-points-hint-v2 {
    cursor: pointer;
    font-family: ridley_groteskmedium;
    font-style: normal;
    font-weight: 500;
    font-size: 12px;
    line-height: normal;
    position: relative;
    color: #000;
    text-transform: uppercase;
    align-items: center;
    column-gap: 4px;
  }

  product-loyalty-points-hint-v2::before {
    content: "";
    display: inline-block;
    background-image: url('{{ "icon-loyalty-stars.svg" | asset_url }}');
    background-repeat: no-repeat;
    background-size: 18px;
    height: 18px;
    width: 18px;
    margin-right: 10px;
  }

  product-loyalty-points-hint-v2::after {
    content: "";
    display: inline-block;
    background-image: url('{{ "icon-loyalty-info.svg" | asset_url }}');
    background-repeat: no-repeat;
    background-size: 18px;
    height: 18px;
    width: 18px;
    margin-left: 10px;
  }

  .loyaltyHintModal__title {
    text-transform: uppercase;
  }

  .loyalty-hint__text {
    background: #f7f7f7;
    box-shadow: 0 8px 12px rgb(0 0 0 / 25%);
    color: #000;
    text-align: left;
    border-radius: 6px;
    padding: 15px 35px 15px 15px;
    position: absolute;
    z-index: 1;
    width: 530px;
    max-width:100%;
    left:0px;
    top: calc(100% + 12px);
    font-size: 12px;
    line-height: 18px;
    text-transform: none;
    display: none;
  }

  @media (max-width: 767px) {
    body.template-product.loyalty--isActive #gorgias-chat-container{
      display:none;
      z-index: -1;
      pointer-events:none;
    }
  }

  .loyalty-hint__bg-overlay {
    display: none;
  }

  .loyalty-hint__text.active ~ .loyalty-hint__bg-overlay {
    content: "";
    display: block;
    position: fixed;
    transform: translate(-50%, -50%);
    top: 50%;
    left:50%;
    width: 100vw;
    height: 100vh;
    z-index: 9998;
  }

  @media (max-width: 1023px) {
    .loyalty-hint__text {
      position: fixed;
      top: 50% !important;
      left: 50% !important;
      bottom:var(--gutter-unit);
      max-height:80vw;
      max-width:calc(100% - var(--gutter-unit-x2));
      transform: translate(-50%, -50%);
      z-index: 9999;
    }

    .loyalty-hint__text.active ~ .loyalty-hint__bg-overlay {
      background: #1111118a;
    }
  }

  .loyalty-hint__close-btn,
  .loyalty-convert__close-btn {
    position:absolute;
    top:0;
    right:0;
    padding:15px;
  }

  .loyalty-hint__close-btn i,
  .loyalty-convert__close-btn i {
    font-size:10px;
    display:block;
  }

  current-loyalty-points p,
  current-loyalty-points a {
    display: inline-block;
    font-size: 12px;
  }

  current-loyalty-points p {
    margin-top: 15px;
    margin-left: 33px;
  }

  current-loyalty-points a {
    text-decoration: underline;
  }

  current-loyalty-points p span {
    padding: 0 5px;
  }


  .join-loyalty {
    margin-top: 15px;
    font-size: 12px;
    margin-left: 33px;
  }

  .join-loyalty a {
    text-decoration: underline;
  }

  body.template-product.ll--Active #gorgias-chat-container{
    display:none;
    pointer-events:none;
    z-index:-1;
  }

</style>

<script type="text/javascript">

  class ProductLoyaltyPointsHintV2 extends HTMLElement {

    constructor() {
      super()
      // bind value to the toggleHintTextDisplay for when it is called inside document click event
      this.toggleHintTextDisplay = this.toggleHintTextDisplay.bind(this)
    }
  
    loyaltylionIsReady(){
      return new Promise( (resolve,reject) => {
        if(window.loyaltylion.ui){
          resolve()
        }else{
          window.loyaltylion.on('ready', () => {
            resolve()
          })
        }
      })
    }

    connectedCallback(){
      this.id =  Math.floor(Math.random()*999999999999999)
      this.hint_popup_text = this.attributes.hint_popup_text ? this.attributes.hint_popup_text.value : false
      this.hint_button_text = this.attributes.hint_button_text ? this.attributes.hint_button_text.value : false
      if(this.hint_popup_text && this.hint_button_text){
        // wait for dom + loyalty lion to load
        DomReadyPromise().then( () => {
          this.loyaltylionIsReady().then( () => {
            if (!window.isGiftCard) this.render()
          }).catch(err => {
            console.log('loyality lion not detected')
          })
        })
      }
    }

    renderHintText(){
      this.hintText = document.createElement('div')
      this.hintText.classList.add('loyalty-hint__text')
      this.backgroundOverlay = document.createElement('div')
      this.backgroundOverlay.classList.add('loyalty-hint__bg-overlay')
      this.hintText.style.display = 'none'
      this.hintText.innerHTML = this.hint_popup_text

      this.hintTextToggle = document.createElement('button')
      this.hintTextToggle.innerHTML = `<i class="wayfx-icon wayfx-icon-close" aria-hidden="true"></i><span class="fallback-text">"Close"</span>`
      this.hintTextToggle.classList.add('loyalty-hint__close-btn','icon-fallback-text')
      this.hintTextToggle.type = 'button'

      this.hintText.appendChild(this.hintTextToggle)
      this.appendChild(this.hintText)
      this.appendChild(this.backgroundOverlay)
    }


    toggleHintTextDisplay(e){
      const mobileWidthThreshold = 1024;
      const {hintText} = this

      if(hintText.classList.contains('active')){
        hintText.style.display = 'none'
        hintText.classList.remove('active')
        document.body.classList.remove("body-masked")
      }else{
        hintText.style.display = 'block'
        hintText.classList.add('active')
        if (window.innerWidth < mobileWidthThreshold){
          document.body.classList.add("body-masked")
        }
      }
    }

    update(price){
      if(price){
        this.productPointsPrice =  this.productPointsPrice || this.querySelector('.js-loyalty-hint__price')
        this.productPointsPrice.innerHTML = price
        this.style.display = 'flex'
      }else{
        this.style.display = 'none'
      }
      window.loyaltylion.ui.refresh()
    }

    bind(){
      // update LL points on page load
      this.update(document.querySelector('.price-v2__actual-pdp')?.textContent || false)

      if (this.classList.contains('click-event')) {
        return
      }

      this.addEventListener('click',(e) => {
        if(!this.querySelector('.loyalty-hint__text')){
          this.renderHintText()
        }
        this.toggleHintTextDisplay(e)
      })

      this.classList.add('click-event')
    }

    render(){
      this.innerHTML = this.hint_button_text
      this.bind()
      this.style.display = 'flex'
    }
  }

  customElements.define('product-loyalty-points-hint-v2', ProductLoyaltyPointsHintV2);



  class convertLoyalty extends HTMLElement {

    constructor() {
      super()
    }

    loyaltylionIsReady(){
      return new Promise( (resolve,reject) => {
        if(window.loyaltylion.ui){
          resolve()
        }else{
          window.loyaltylion.on('ready', () => {
            resolve()
          })
        }
      })
    }

    connectedCallback() {
      DomReadyPromise().then( () => {
        this.convertTrigger = this.querySelector('button');
        this.loyaltylionIsReady().then( () => {
          this.style.display = 'block'
          this.convertTrigger?.addEventListener('click',(e) => {
            window.loyaltylion.dev.addRedemptionNotification()
          })
        }).catch(err => {
          console.log('loyality lion not detected...')
        })
      })
    }
  }

  customElements.define('current-loyalty-points', convertLoyalty);
</script>
