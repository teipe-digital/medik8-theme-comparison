<!-- sections/u-loyalty-landing__current-tier.liquid -->

<div data-anchor="{{ section.settings.nav_title }}" class="block-grid block-grid--f">
  <loyaltylion-current-tier class="tac flex flex-grid column-wrap align-center justify-center block-12/12">
    {% if section.settings.pre_title != blank %}
    <span class="d-block t-m t-ucase">{{ section.settings.pre_title }}</span>
    {% endif %}
    <h2 class="js-current-tier__header h-style h-style--accent t-xl lh-s cell-l cell-r"></h2>
    <div class="js-curent-tier__content block-11/12 flex row-wrap align-top justify-space @mobile__justify-center @desktop__block-12/12"></div>
  </loyaltylion-current-tier>
</div>

{% liquid
  assign amount_html = '<span class="f-w600">${amount}</span>'
  assign date_html = '<span class="f-w600">${date}</span>'
  assign tier_html = '${tier}'
  assign nextTierText = 'apps.loyalty_lion.next_tier_hint_html' | t : amount:amount_html ,  date:date_html ,  tier:tier_html 
%}

<script type="text/javascript">    
  class LoyaltyLionCurrentTier extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      DomReadyPromise().then( async () => {
        if(!this.mounted){
          this.mounted = true
          this.util = await new LoyaltyLionUtil()
          this.render()
        }
      }).catch(err => {
        console.log(err)
      })
    }

    render(){
      const {_customer} = this.util.loyaltylion
      if(!_customer){
        return
      }

      const nextTierText = {{ nextTierText | json }}
      const crystalIconSrc = {{ 'loyalty-landing.medals.standard.jpg' | asset_img_url : '256x'| json }}
      const plusIconSrc = {{ 'loyalty-landing.medals.plus.jpg'  | asset_img_url : '256x' |  json }}
      const deluxeIconSrc = {{ 'loyalty-landing.medals.deluxe.jpg' | asset_img_url : '256x'| json }}

      let {loyaltyTiers} = this.util.loyaltylion.program
      loyaltyTiers = loyaltyTiers.filter(({hidden}) => !hidden)
      loyaltyTiers = loyaltyTiers.map( (tier,index) => {
        tier.icon = tier.name == 'Crystal' ? crystalIconSrc : tier.name == 'Crystal Plus' ? plusIconSrc : deluxeIconSrc
        tier.active = _customer.loyaltyTierMembership?.loyaltyTierId == tier.id ? _customer.loyaltyTierMembership : false
        if(tier.active && index < loyaltyTiers.length - 1 ){
          tier.next = {
            amount:`${this.util.settings.currencySymbol}${((tier.bounds.upper + 1) - _customer.loyaltyTierEligibleSpend)/100}`,
            tier:loyaltyTiers[index + 1].name,
            date:_customer.loyaltyTierMembership?.expiresAt?.replace(/^(\d{4})-(\d{2})-(\d{2}).*$/, '$3/$2/$1') || null,
          }
        }
        return tier
      })

      if(!loyaltyTiers.find(({active}) => active)){
        loyaltyTiers[0].active = true
      }

      const activeTier = loyaltyTiers.find(({active}) => active)
      this.header = this.querySelector('.js-current-tier__header')
      this.content = this.querySelector('.js-curent-tier__content')
      this.header.innerHTML = activeTier.name
      
      let _activeTier = { ...activeTier };
      let _nextTierDate = null;
      let _nextTierMessage = "";

      if (_activeTier.next) {
        let _nextTierText = nextTierText;

        // Check if a valid date exists in the tier data
        if (_activeTier.next.date) {
          // Convert date from DD/MM/YYYY to ISO format YYYY-MM-DD
          _nextTierDate = new Date(_activeTier.next.date.split('/').reverse().join('-') + 'T23:59:59.999Z');
        }

        // Remove date placeholder if the date is missing or invalid
        if (!_activeTier.next.date) {
          _nextTierText = _nextTierText.replace(/by <span class="f-w600">\${date}<\/span>/, "");
        }

        // Show the message if:
        // - There is no date (e.g., tier does not have an expiration condition)
        // - The date is valid and in the future
        if (!_activeTier.next.date || _nextTierDate > new Date()) {
          _nextTierMessage = `
            <p class="block-12/12 t-m cell-l cell-r ct--x2">
              ${_nextTierText.replace(/\${(.*?)}/g, (match, key) => _activeTier.next[key.trim()] || match)}
            </p>
          `;
        }
      }

      this.content.innerHTML = `
        ${loyaltyTiers.map( tier => {
          return `
            <div class="ll-current-tier-item ${tier.active ? 'll-current-tier-item--active' : '' } 
                        cell-l cell-r block-4/12 tac flex flex-grid--d2 column-wrap align-center justify-center @mobile__block-12/12 ">
              <img src="${tier.icon}" width="256" height="256" loading="lazy" alt="${tier.name}">
              <h2 class="h-style t-m f-w600 row">${tier.name}</h2>
            </div>
          `
        }).join('')}
        ${_nextTierMessage}
      `
    }
  }
  customElements.define('loyaltylion-current-tier', LoyaltyLionCurrentTier);
</script>

{% schema %}
{
  "name":"u/loyalty/current-tier",
  "limit":1,
  "class":"ct--x3 cb--x3",
  "settings":[

    {
      "type":"header",
      "content":"Content"
    },
    { 
      "type":"text",
      "id":"nav_title",
      "label":"Nav title",
      "default":"Overview"
    },
    { 
      "type":"textarea",
      "id":"pre_title",
      "label":"Pre-heading",
      "default":"Your Current Tier"
    }
  ]
}
{% endschema %}
